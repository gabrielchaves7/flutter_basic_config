// Mocks generated by Mockito 5.0.16 from annotations
// in tenis_certo/bloc/oportunidades_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tenis_certo/model/oportunidade_model.dart' as _i5;
import 'package:tenis_certo/repository/oportunidades_repository.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeClient_0 extends _i1.Fake implements _i2.Client {}

/// A class which mocks [OportunidadesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockOportunidadesRepository extends _i1.Mock
    implements _i3.OportunidadesRepository {
  MockOportunidadesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get httpClient =>
      (super.noSuchMethod(Invocation.getter(#httpClient),
          returnValue: _FakeClient_0()) as _i2.Client);
  @override
  set httpClient(_i2.Client? _httpClient) =>
      super.noSuchMethod(Invocation.setter(#httpClient, _httpClient),
          returnValueForMissingStub: null);
  @override
  _i4.Future<List<_i5.OportunidadeModel>?> fetch() =>
      (super.noSuchMethod(Invocation.method(#fetch, []),
              returnValue: Future<List<_i5.OportunidadeModel>?>.value())
          as _i4.Future<List<_i5.OportunidadeModel>?>);
  @override
  String toString() => super.toString();
}
